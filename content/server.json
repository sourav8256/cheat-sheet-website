{
	"title" : "Boilerplate",
	"data" : [
		{
			"category-name" : "Nginx",
			"sub-list" : [
				{
					"id" : "sfdjsl1",
					"name" : "Installation",
					"code" : "sudo apt update\r\nsudo apt install nginx\r\n\r\n\r\nsudo ufw app list\r\n\r\n\r\nOutput\r\nAvailable applications:\r\n  Nginx Full\r\n  Nginx HTTP\r\n  Nginx HTTPS\r\n  OpenSSH\r\n\r\n\r\nsudo ufw allow 'Nginx HTTP'\r\n\r\nsudo ufw status\r\n\r\n\r\nOutput\r\nStatus: active\r\n\r\nTo                         Action      From\r\n--                         ------      ----\r\nOpenSSH                    ALLOW       Anywhere                  \r\nNginx HTTP                 ALLOW       Anywhere                  \r\nOpenSSH (v6)               ALLOW       Anywhere (v6)             \r\nNginx HTTP (v6)            ALLOW       Anywhere (v6)\r\n\r\n\r\n\r\n\r\nsystemctl status nginx\r\n\r\n\r\nsudo systemctl stop nginx\r\n\r\nsudo systemctl start nginx\r\n\r\nsudo systemctl restart nginx\r\n\r\nsudo systemctl reload nginx\r\n\r\nsudo systemctl disable nginx\r\n\r\nsudo systemctl enable nginx\r\n\r\n",
					"description" : ""
				},
				{
					"id" : "sfdjsl1",
					"name" : "Server blocks",
					"code" : "Making server blocks\r\n\r\n\r\nsudo nano /etc/nginx/sites-available/example.com\r\n\r\nserver {\r\n        listen 80;\r\n        listen [::]:80;\r\n\r\n        root /var/www/example.com/html;\r\n        index index.html index.htm index.nginx-debian.html;\r\n\r\n        server_name example.com www.example.com;\r\n\r\n        location / {\r\n                try_files $uri $uri/ =404;\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nsudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/\r\n\r\n\r\n\r\n\r\nTo avoid a possible hash bucket memory problem that can arise from adding additional server names, it is necessary to adjust a single value in the /etc/nginx/nginx.conf file.\r\n\r\n\r\nsudo nano /etc/nginx/nginx.conf\r\n\r\n\r\nFind the server_names_hash_bucket_size directive and remove the # symbol to uncomment the line:\r\n\r\n ...\r\nhttp {\r\n    ...\r\n    server_names_hash_bucket_size 64;\r\n    ...\r\n}\r\n...\r\n\r\n\r\n\r\n\r\nNext, test to make sure that there are no syntax errors in any of your Nginx files:\r\n\r\nsudo nginx -t\r\n\r\n\r\nIf there aren’t any problems, restart Nginx to enable your changes:\r\n\r\nsudo systemctl restart nginx",
					"description" : ""
				}
			]
		},
		{
			"category-name" : "PHP and MYSQL",
			"sub-list" : [
				{
					"id" : "sfdjsl1",
					"name" : "Installation",
					"code" : "\r\n\r\n*************\r\nInstalling PHP\r\n*************\r\n\r\n\r\n\r\n*** Configuring with Apache***\r\n\r\nsudo apt install php libapache2-mod-php php-mysql\r\n\r\n\r\nsudo nano /etc/apache2/mods-enabled/dir.conf\r\n\r\n<IfModule mod_dir.c>\r\n    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm\r\n</IfModule>\r\n\r\nsudo systemctl restart apache2\r\n\r\nsudo systemctl status apache2\r\n\r\n\r\n\r\n***Configuring with NGINX***\r\n\r\n\r\nsudo add-apt-repository universe\r\n\r\nsudo apt install php-fpm php-mysql\r\n\r\nsudo nano /etc/nginx/sites-available/example.com\r\n\r\n location ~ \\.php$ {\r\n        include snippets/fastcgi-php.conf;\r\n        fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;\r\n}\r\n\r\nserver {\r\n        listen 80;\r\n        root /var/www/html;\r\n        index index.php index.html index.htm index.nginx-debian.html;\r\n        server_name example.com;\r\n\r\n        location / {\r\n                try_files $uri $uri/ =404;\r\n        }\r\n\r\n        location ~ \\.php$ {\r\n                include snippets/fastcgi-php.conf;\r\n                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;\r\n        }\r\n\r\n        location ~ /\\.ht {\r\n                deny all;\r\n        }\r\n}\r\n\r\n\r\n\r\n*************\r\nInstalling MySQL\r\n*************\r\n\r\n\r\nsudo apt install mysql-server\r\n\r\n\r\nWhen the installation is complete, run a simple security script that comes pre-installed with MySQL\r\n\r\nsudo mysql_secure_installation\r\n\r\n\r\nsudo mysql\r\n\r\n\r\n\r\n\r\nSELECT user,authentication_string,plugin,host FROM mysql.user;\r\n\r\n\r\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';\r\n\r\n\r\nFLUSH PRIVILEGES;\r\n\r\n\r\nSELECT user,authentication_string,plugin,host FROM mysql.user;\r\n\r\nexit",
					"description" : ""
				},
				{
					"id" : "sfdjsl1",
					"name" : "Server blocks",
					"code" : "Making server blocks\r\n\r\n\r\nsudo nano /etc/nginx/sites-available/example.com\r\n\r\nserver {\r\n        listen 80;\r\n        listen [::]:80;\r\n\r\n        root /var/www/example.com/html;\r\n        index index.html index.htm index.nginx-debian.html;\r\n\r\n        server_name example.com www.example.com;\r\n\r\n        location / {\r\n                try_files $uri $uri/ =404;\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nsudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/\r\n\r\n\r\n\r\n\r\nTo avoid a possible hash bucket memory problem that can arise from adding additional server names, it is necessary to adjust a single value in the /etc/nginx/nginx.conf file.\r\n\r\n\r\nsudo nano /etc/nginx/nginx.conf\r\n\r\n\r\nFind the server_names_hash_bucket_size directive and remove the # symbol to uncomment the line:\r\n\r\n ...\r\nhttp {\r\n    ...\r\n    server_names_hash_bucket_size 64;\r\n    ...\r\n}\r\n...\r\n\r\n\r\n\r\n\r\nNext, test to make sure that there are no syntax errors in any of your Nginx files:\r\n\r\nsudo nginx -t\r\n\r\n\r\nIf there aren’t any problems, restart Nginx to enable your changes:\r\n\r\nsudo systemctl restart nginx",
					"description" : ""
				}
			]
		}
	]
}
